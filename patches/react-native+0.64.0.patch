diff --git a/node_modules/react-native/Libraries/LayoutAnimation/LayoutAnimation.js b/node_modules/react-native/Libraries/LayoutAnimation/LayoutAnimation.js
index 91949ed..337a056 100644
--- a/node_modules/react-native/Libraries/LayoutAnimation/LayoutAnimation.js
+++ b/node_modules/react-native/Libraries/LayoutAnimation/LayoutAnimation.js
@@ -32,7 +32,7 @@ function configureNext(
   onAnimationDidFail?: OnAnimationDidFailCallback,
 ) {
   if (!Platform.isTesting) {
-    if (UIManager?.configureNextLayoutAnimation) {
+    if (UIManager.configureNextLayoutAnimation) {
       UIManager.configureNextLayoutAnimation(
         config,
         onAnimationDidEnd ?? function() {},
@@ -40,9 +40,9 @@ function configureNext(
           function() {} /* this should never be called in Non-Fabric */,
       );
     }
-    const FabricUIManager: FabricUIManagerSpec = global?.nativeFabricUIManager;
-    if (FabricUIManager?.configureNextLayoutAnimation) {
-      global?.nativeFabricUIManager?.configureNextLayoutAnimation(
+    const FabricUIManager: FabricUIManagerSpec = global.nativeFabricUIManager;
+    if (FabricUIManager.configureNextLayoutAnimation) {
+      global.nativeFabricUIManager.configureNextLayoutAnimation(
         config,
         onAnimationDidEnd ?? function() {},
         onAnimationDidFail ??
diff --git a/node_modules/react-native/React/Base/RCTTouchHandler.m b/node_modules/react-native/React/Base/RCTTouchHandler.m
index fc32afb..44d237f 100644
--- a/node_modules/react-native/React/Base/RCTTouchHandler.m
+++ b/node_modules/react-native/React/Base/RCTTouchHandler.m
@@ -13,6 +13,7 @@
 #import "RCTBridge.h"
 #import "RCTEventDispatcherProtocol.h"
 #import "RCTLog.h"
+#import "RCTRootContentView.h"
 #import "RCTSurfaceView.h"
 #import "RCTTouchEvent.h"
 #import "RCTUIManager.h"
@@ -104,6 +105,16 @@ - (void)_recordNewTouches:(NSSet<UITouch *> *)touches
       continue;
     }
 
+    UIView *touchRootView = touch.view;
+    while (touchRootView && ![touchRootView isKindOfClass:RCTRootContentView.class]) {
+      touchRootView = touchRootView.superview;
+    }
+
+    if ([touchRootView isKindOfClass:RCTRootContentView.class] && touchRootView != self.view) {
+      // handled by a different UITouchHandler
+      continue;
+    }
+
     // Get new, unique touch identifier for the react touch
     const NSUInteger RCTMaxTouches = 11; // This is the maximum supported by iDevices
     NSInteger touchID = ([_reactTouches.lastObject[@"identifier"] integerValue] + 1) % RCTMaxTouches;
diff --git a/node_modules/react-native/jest/setup.js b/node_modules/react-native/jest/setup.js
index bc27b00..64ba3d6 100644
--- a/node_modules/react-native/jest/setup.js
+++ b/node_modules/react-native/jest/setup.js
@@ -43,6 +43,7 @@ jest
     __esModule: true,
     default: {
       reportException: jest.fn(),
+      handleException: jest.fn(),
     },
   }))
   .mock('../Libraries/ReactNative/UIManager', () => ({
diff --git a/node_modules/react-native/scripts/find-node.sh b/node_modules/react-native/scripts/find-node.sh
index c111e70..771c513 100755
--- a/node_modules/react-native/scripts/find-node.sh
+++ b/node_modules/react-native/scripts/find-node.sh
@@ -6,6 +6,13 @@
 
 set -e
 
+# Set up the asdf node version manager if present
+if [[ -x "$HOME/.asdf/asdf.sh" ]]; then
+  . "$HOME/.asdf/asdf.sh"
+elif [[ -x "$(command -v brew)" && -s "$(brew --prefix asdf)/asdf.sh" ]]; then
+  . "$(brew --prefix asdf)/asdf.sh"
+fi
+
 # Define NVM_DIR and source the nvm.sh setup script
 [ -z "$NVM_DIR" ] && export NVM_DIR="$HOME/.nvm"
 
