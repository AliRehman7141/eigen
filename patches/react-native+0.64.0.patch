diff --git a/node_modules/react-native/Libraries/LogBox/Data/LogBoxData.js b/node_modules/react-native/Libraries/LogBox/Data/LogBoxData.js
index b989044..19d688d 100644
--- a/node_modules/react-native/Libraries/LogBox/Data/LogBoxData.js
+++ b/node_modules/react-native/Libraries/LogBox/Data/LogBoxData.js
@@ -23,6 +23,9 @@ import type {
 import parseErrorStack from '../../Core/Devtools/parseErrorStack';
 import type {ExtendedError} from '../../Core/Devtools/parseErrorStack';
 import NativeLogBox from '../../NativeModules/specs/NativeLogBox';
+
+const ExceptionsManager = require('../../Core/ExceptionsManager');
+
 export type LogBoxLogs = Set<LogBoxLog>;
 export type LogData = $ReadOnly<{|
   level: LogLevel,
@@ -98,8 +101,6 @@ export function reportLogBoxError(
   error: ExtendedError,
   componentStack?: string,
 ): void {
-  const ExceptionsManager = require('../../Core/ExceptionsManager');
-
   error.forceRedbox = true;
   error.message = `${LOGBOX_ERROR_MESSAGE}\n\n${error.message}`;
   if (componentStack != null) {
diff --git a/node_modules/react-native/React/Base/RCTTouchHandler.m b/node_modules/react-native/React/Base/RCTTouchHandler.m
index fc32afb..44d237f 100644
--- a/node_modules/react-native/React/Base/RCTTouchHandler.m
+++ b/node_modules/react-native/React/Base/RCTTouchHandler.m
@@ -13,6 +13,7 @@
 #import "RCTBridge.h"
 #import "RCTEventDispatcherProtocol.h"
 #import "RCTLog.h"
+#import "RCTRootContentView.h"
 #import "RCTSurfaceView.h"
 #import "RCTTouchEvent.h"
 #import "RCTUIManager.h"
@@ -104,6 +105,16 @@ - (void)_recordNewTouches:(NSSet<UITouch *> *)touches
       continue;
     }
 
+    UIView *touchRootView = touch.view;
+    while (touchRootView && ![touchRootView isKindOfClass:RCTRootContentView.class]) {
+      touchRootView = touchRootView.superview;
+    }
+
+    if ([touchRootView isKindOfClass:RCTRootContentView.class] && touchRootView != self.view) {
+      // handled by a different UITouchHandler
+      continue;
+    }
+
     // Get new, unique touch identifier for the react touch
     const NSUInteger RCTMaxTouches = 11; // This is the maximum supported by iDevices
     NSInteger touchID = ([_reactTouches.lastObject[@"identifier"] integerValue] + 1) % RCTMaxTouches;
diff --git a/node_modules/react-native/jest/setup.js b/node_modules/react-native/jest/setup.js
index bc27b00..ef9a172 100644
--- a/node_modules/react-native/jest/setup.js
+++ b/node_modules/react-native/jest/setup.js
@@ -45,6 +45,11 @@ jest
       reportException: jest.fn(),
     },
   }))
+  .mock('../Libraries/Core/ExceptionsManager', () => ({
+    handleException: (...args) => {
+      return;
+    },
+  }))
   .mock('../Libraries/ReactNative/UIManager', () => ({
     AndroidViewPager: {
       Commands: {
diff --git a/node_modules/react-native/scripts/find-node.sh b/node_modules/react-native/scripts/find-node.sh
index c111e70..771c513 100755
--- a/node_modules/react-native/scripts/find-node.sh
+++ b/node_modules/react-native/scripts/find-node.sh
@@ -6,6 +6,13 @@
 
 set -e
 
+# Set up the asdf node version manager if present
+if [[ -x "$HOME/.asdf/asdf.sh" ]]; then
+  . "$HOME/.asdf/asdf.sh"
+elif [[ -x "$(command -v brew)" && -s "$(brew --prefix asdf)/asdf.sh" ]]; then
+  . "$(brew --prefix asdf)/asdf.sh"
+fi
+
 # Define NVM_DIR and source the nvm.sh setup script
 [ -z "$NVM_DIR" ] && export NVM_DIR="$HOME/.nvm"
 
